# Copyright (c) 2023, STMicroelectronics
# SPDX-License-Identifier: Apache-2.0

description: |
    STM32 Pin controller Node
    Based on pincfg-node.yaml binding.

    Note: `bias-disable` and `drive-push-pull` are default pin configurations.
           They will be applied in case no `bias-foo` or `driver-bar` properties
           are set.

compatible: "st,stm32-pinctrl"

include: [base.yaml]

properties:
  "#gpio-range-cells":
    type: int
    const: 3

gpio-range-cells:
  - gpio_offset
  - pin_offset
  - npins

child-binding:
  description: STM32 pin controller pin group
  child-binding:
    description: STM32 pin controller pin configuration node.
    include:
      - name: pincfg-node.yaml
        property-allowlist:
          - bias-disable
          - bias-pull-down
          - bias-pull-up
          - drive-push-pull
          - drive-open-drain
          - output-low
          - output-high
          - slew-rate

    properties:
      pinmux:
        required: true
        type: array
        description: |
          Reused from
          https://github.com/torvalds/linux/blob/master/Documentation/devicetree/bindings/pinctrl/st,stm32-pinctrl.yaml
          Integer array, represents gpio pin number and mux setting.
          These defines are calculated as: ((port * 16 + line) << 8) | function
          With:
          - port: The gpio port index (PA = 0, PB = 1, ..., PK = 11)
          - line: The line offset within the port (PA0 = 0, PA1 = 1, ..., PA15 = 15)
          - function: The function number, can be:
          * 0 : Alternate Function 0
          * 1 : Alternate Function 1
          * 2 : Alternate Function 2
          * ...
          * 15 : Alternate Function 15
          * 16 : Analog
          * 17 : GPIO
          In case selected pin function is GPIO, pin is statically configured as
          a plain input/output GPIO. Default configuration is input. Output value
          can be configured by adding 'ouptut-low' or 'output-high' properties
          to the pin configuration.

          To simplify the usage, macro is available to generate "pinmux" field.
          This macro is available here:
            -include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h
          Some examples of macro usage:
             GPIO A9 set as alernate function 2
          ... {
                   pinmux = <STM32_PINMUX('A', 9, AF2)>;
          };
             GPIO A9 set as analog
          ... {
                   pinmux = <STM32_PINMUX('A', 9, ANALOG)>;
          };
             GPIO A9 set as GPIO output high
          ... {
                   pinmux = <STM32_PINMUX('A', 9, GPIO)>;
                   output-high;
          };

      slew-rate:
        enum: [0, 1, 2, 3]
        description: |
          Pin speed. Default to low-speed. For few pins (PA11 and
          PB3 depending on SoCs)hardware reset value could differ
          (very-high-speed). Carefully check reference manual for these pins.
